from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

# –ì–ª–∞–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
def generate_main_menu():
    return InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="–ú–µ–Ω—é", callback_data='back_to_menu')]
        ]
    )

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –º–µ–Ω—é —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏
def generate_main_menu(is_admin=False):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."""
    buttons = [
        [InlineKeyboardButton(text="–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É", callback_data="generate_link")],
        [InlineKeyboardButton(text="–°—Å—ã–ª–∫–∞ —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏", callback_data="generate_custom_link")],  # –ù–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞
        [InlineKeyboardButton(text="–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã", callback_data="show_results")],
        [InlineKeyboardButton(text="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="check_subscription")],
    ]
    if is_admin:
        buttons.append([InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="admin_stats")])
        buttons.append([InlineKeyboardButton(text="üí∞ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω–∞–º–∏", callback_data="manage_prices")])
        buttons.append([InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –≤–æ–ø—Ä–æ—Å—ã", callback_data="add_questions")])
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def generate_question_selection_keyboard(questions):
    buttons = [[InlineKeyboardButton(text=q['text'], callback_data=f"select_q_{q['id']}")] for q in questions]
    buttons.append([InlineKeyboardButton(text="‚úÖ –ì–æ—Ç–æ–≤–æ", callback_data="finalize_question_link")])
    buttons.append([InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_menu")])
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def generate_rate_keyboard_for_questions(token, questions):
    keyboard = []
    for q in questions:
        row = [InlineKeyboardButton(text=f"{i}", callback_data=f"rateq_{q['id']}_{i}_{token}") for i in range(1, 6)]
        keyboard.append(row)
    keyboard.append([InlineKeyboardButton(text="–ú–µ–Ω—é", callback_data="back_to_menu")])
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def generate_single_question_keyboard(token, question_id):
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text=str(i), callback_data=f"rate_step_{question_id}_{i}_{token}") for i in range(1, 6)]
        ]
    )


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
def generate_stats_menu(is_vip=False):
        buttons = [
            [InlineKeyboardButton(text='–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ —ç—Ç–æ—Ç –¥–µ–Ω—å', callback_data='stat_day')],
            [InlineKeyboardButton(text='–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –Ω–µ–¥–µ–ª—é', callback_data='stat_week')],
            [InlineKeyboardButton(text='–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –º–µ—Å—è—Ü', callback_data='stat_month')],
            [InlineKeyboardButton(text='–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º', callback_data='poll_results')],
        ]
        if is_vip:
            buttons.append([InlineKeyboardButton(text="–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≥–æ–ª–æ—Å–æ–≤–∞–≤—à–∏—Ö", callback_data="view_voters")])
        buttons.append([InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='back_to_menu')])
        
        return InlineKeyboardMarkup(inline_keyboard=buttons)

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –æ—Ü–µ–Ω–∫–∏
def generate_rate_keyboard(token: str):
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text=str(i), callback_data=f"rate_{i}_token={token}") for i in range(1, 6)],
            [InlineKeyboardButton(text='–ú–µ–Ω—é', callback_data='back_to_menu')]
        ]
    )

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã
def generate_payment_keyboard(url,text):
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="–û–ø–ª–∞—Ç–∏—Ç—å", url=url)],
            [InlineKeyboardButton(text=text, callback_data='check_payment')],
            [InlineKeyboardButton(text='–ú–µ–Ω—é', callback_data='back_to_menu')]
        ]
    )

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
def generate_back_button():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data='back_to_menu')]
    ])
# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" –≤ –≤—ã–±–æ—Ä–µ —Å—Ç–∞—Å—Ç–∏—Å—Ç–∏–∫–∏
def generate_back_results():
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="show_results")]
        ]
    )

def generate_vip_menu():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è VIP-–º–µ–Ω—é."""
    buttons = [
        [InlineKeyboardButton(text="–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≥–æ–ª–æ—Å–æ–≤–∞–≤—à–∏—Ö", callback_data="view_voters")],
        [InlineKeyboardButton(text="–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_menu")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def generate_payment_period_keyboard():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∞ –æ–ø–ª–∞—Ç—ã."""
    buttons = [
        [InlineKeyboardButton(text="1 –¥–µ–Ω—å (–æ–±—ã—á–Ω—ã–π)", callback_data="pay_day")],
        [InlineKeyboardButton(text="1 –Ω–µ–¥–µ–ª—è (–æ–±—ã—á–Ω—ã–π)", callback_data="pay_week")],
        [InlineKeyboardButton(text="1 –º–µ—Å—è—Ü (–æ–±—ã—á–Ω—ã–π)", callback_data="pay_month")],
        [InlineKeyboardButton(text="1 –º–µ—Å—è—Ü (VIP)", callback_data="pay_vip_month")],  # VIP-—Ç–∞—Ä–∏—Ñ
        [InlineKeyboardButton(text="–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_menu")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def generate_confirm_new_payment_keyboard(period, is_vip=False):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞."""
    buttons = [
        [InlineKeyboardButton(text="–î–∞, —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π", callback_data=f"confirm_new_payment_{period}_{'vip' if is_vip else 'normal'}")],
        [InlineKeyboardButton(text="–ù–µ—Ç, –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="back_to_menu")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def generate_manage_prices_keyboard():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ü–µ–Ω–∞–º–∏ –Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∏."""
    buttons = [
        [InlineKeyboardButton(text="–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ü–µ–Ω—É –Ω–∞ –¥–µ–Ω—å (–û–±—ã—á–Ω—ã–π)", callback_data="set_price_day_normal")],
        [InlineKeyboardButton(text="–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ü–µ–Ω—É –Ω–∞ –Ω–µ–¥–µ–ª—é (–û–±—ã—á–Ω—ã–π)", callback_data="set_price_week_normal")],
        [InlineKeyboardButton(text="–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ü–µ–Ω—É –Ω–∞ –º–µ—Å—è—Ü (–û–±—ã—á–Ω—ã–π)", callback_data="set_price_month_normal")],
        [InlineKeyboardButton(text="–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ü–µ–Ω—É –Ω–∞ –º–µ—Å—è—Ü (VIP)", callback_data="set_price_month_vip")],
        [InlineKeyboardButton(text="–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_menu")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def generate_back_to_prices_button():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–Ω–æ–ø–∫—É –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é —Ü–µ–Ω–∞–º–∏."""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ù–∞–∑–∞–¥ –∫ —Ü–µ–Ω–∞–º", callback_data="manage_prices")]
    ])